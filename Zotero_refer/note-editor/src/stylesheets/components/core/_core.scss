
.hidden {
	display: none;
}

.primary-editor {
	position: relative;
}

.primary-editor {
	word-wrap: break-word;
	white-space: pre-wrap;
	white-space: break-spaces;
	-webkit-font-variant-ligatures: none;
	font-variant-ligatures: none;
	font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.primary-editor pre {
	white-space: pre-wrap;
}

.primary-editor li {
	position: relative;
}

.ProseMirror-hideselection *::selection {
	background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
	background: transparent;
}

.ProseMirror-hideselection {
	caret-color: transparent;
}

.ProseMirror-selectednode {
	outline: none;
}

/* Protect against generic img rules */
img.ProseMirror-separator {
	display: inline !important;
	border: none !important;
	margin: 0 !important;
}

.highlight {
	/*user-select: none;*/
	/*cursor: pointer;*/
	/*-webkit-user-modify: read-only;*/
	/*-webkit-user-drag: element;*/
	//background-color: #f8f8f8;
	//border-bottom: 1px dotted gray;
	//cursor: default;


	&:hover {
		//background-color: #f1f1f1;
		//background-color: #E1EFFF;
		//border-bottom-width: 0;
		//color: gray;
		//border-bottom: 1px dotted black;
	}
}

.citation {
	//user-select: none;
	cursor: default;
	//-webkit-user-modify: read-only;
	//-webkit-user-drag: element;

}

.citation.selected, .citation:hover {
	background-color: #E1EFFF;;
}

.citation.ProseMirror-selectednode {
	background-color: #f4f4f4;
}

.highlight:hover {
	/*background-color: #f8e887;*/
}

/*.highlight.ProseMirror-selectednode {*/
/*user-select: unset;*/
/*cursor: unset;*/
/*-webkit-user-modify: unset;*/
/*-webkit-user-drag: unset;*/
/*}*/



// Override inline padding which is only used for the
// back-compatibility with the TinyMCE
p, h1, h2, h3, h4, h5, h6 {
	padding-left: 0 !important;
	padding-right: 0 !important;
}

pre {
	padding: 0.7rem 1rem !important;
}

$max-indent-level: 7;
$indent-width: 30;

@for $i from 1 through $max-indent-level {
	[data-indent='#{$i}']:not([dir]) {
		padding-left: ($indent-width * $i) + px !important;
	}
}

/* rtl:begin:ignore */
@for $i from 1 through $max-indent-level {
	[dir='ltr'][data-indent='#{$i}'] {
		padding-left: ($indent-width * $i) + px !important;
	}
}

@for $i from 1 through $max-indent-level {
	[dir='rtl'][data-indent='#{$i}'] {
		padding-right: ($indent-width * $i) + px !important;
	}
}

/* rtl:end:ignore */


.find {
	background-color: yellow;
}

.find-selected {
	background-color: #adf;
}

.primary-editor.column-resize-handle {
	position: absolute;
	right: -2px;
	top: 0;
	bottom: 0;
	width: 4px;
	z-index: 20;
	background-color: #adf;
	pointer-events: none;
}

.ProseMirror.resize-cursor {
	cursor: ew-resize;
	cursor: col-resize;
}

/* Give selected cells a blue overlay */
.primary-editor.selectedCell:after {
	z-index: 2;
	position: absolute;
	content: "";
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	background: rgba(200, 200, 255, 0.4);
	pointer-events: none;
}


.ProseMirror-gapcursor {
	display: none;
	pointer-events: none;
	position: absolute;
}

.ProseMirror-gapcursor:after {
	content: "";
	display: block;
	position: absolute;
	top: -2px;
	width: 20px;
	border-top: 1px solid black;
	animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
	to {
		visibility: hidden;
	}
}

.ProseMirror-focused .ProseMirror-gapcursor {
	display: block;
}

.primary-editor, .toolbar {

	p {
		line-height: 1.5;
	}

	h1 {
		font-size: 1.2em;
	}

	h2 {
		font-size: 1.1em;
	}

	h3 {
		font-size: 1em;
	}

	h4 {
		font-size: 0.9em;
	}

	h5 {
		font-size: 0.8em;
	}

	h6 {
		font-size: 0.7em;
	}
}

.primary-editor {
	outline: none;
	overflow-wrap: break-word;
	word-wrap: break-word;
	word-break: break-word;

	* {
		//caret-color: currentColor;
	}


	img:not(.ProseMirror-separator) {
		width: 100%;
		display: block;
	}

	p, h1, h2, h3, h4, h5, h6 {
		color: #0D0D0D;
	}


	blockquote {
		margin-top: 1.5em;
		margin-bottom: 1.5em;
		margin-left: 1em;
		padding-left: .75em;
		border-left: 3px solid lightblue;
	}


	pre {
		padding: 0.7rem 1rem;
		border-radius: 5px;
		background: #f1f1f1;
		//color: $color-white;

		font-size: 0.9em;
	}

	p code {
		padding: 0.2rem 0.4rem;
		border-radius: 5px;
		font-size: 0.9em;
		background: #f1f1f1;
	}

	ul,
	ol {
		padding-left: 2rem;
	}

	li > p,
	li > ol,
	li > ul {
		margin: 0;
	}

	table {
		border-collapse: collapse;
		width: 100%;
		margin: 0;
		border: 1px solid #cccccc;
		border-top: 0;

		td, th {
			min-width: 1em;
			border: 1px solid #cccccc;
			padding: 3px 5px;
			vertical-align: top;
			box-sizing: border-box;
			position: relative;

			// In newer Firefox versions wrapping works without breaking all words
			word-break: break-all;

			> * {
				margin-bottom: 0;
			}

			*:first-child {
				margin-top: 0;
			}

			*:last-child {
				margin-bottom: 0;
			}
		}

		th {
			font-weight: bold;
			text-align: left;
		}

		.selectedCell:after {
			z-index: 2;
			position: absolute;
			content: "";
			left: 0;
			right: 0;
			top: 0;
			bottom: 0;
			background: rgba(200, 200, 255, 0.4);
			pointer-events: none;
		}

		.column-resize-handle {
			position: absolute;
			right: -2px;
			top: 0;
			bottom: 0;
			width: 4px;
			z-index: 20;
			background-color: #adf;
			pointer-events: none;
		}
	}

	.tableWrapper {
		margin: 1em 0;
	}

	.resize-cursor {
		cursor: ew-resize;
		cursor: col-resize;
	}


}

.ProseMirror .empty-node::before {
	position: absolute;
	color: #aaa;
	cursor: text;
}

.ProseMirror .empty-node:first-child::before {
	content: attr(data-placeholder)
}

.node-selected {
	background-color: #F2F2F2;
}

.blocks-selected {
	*::selection {
		background-color: rgba(0, 0, 0, 0);
	}
}

.drag-handle {
	position: absolute;
	width: 24px;
	height: 24px;
	z-index: 99;
	background-image: url(../../res/drag-handle.svg);
	background-repeat: no-repeat;
	background-position: top 1px left;
	cursor: grab;
}

.primary-editor {
	& > p, h1, h2, h3, h4, h5, h6, pre, blockquote, .tableWrapper {
		position: relative;

		&:before {
			position: absolute;
			width: 64px;
			height: 85%;
			margin-left: -64px;
			content: "";
		}
	}
}


/* rtl:begin:ignore */
.primary-editor {
	& > p, h1, h2, h3, h4, h5, h6, pre, blockquote, table {
		&[dir=rtl]:before {
			display: none;
		}
	}
}
/* rtl:end:ignore */

.ProseMirror-selectednode {
	background-color: #f4f4f4;
	border-radius: 4px;
}

.primary-editor hr {
	border: 0;
	background-color: #cccccc;
	height: 2px;

	&.ProseMirror-selectednode {
		background-color: #adf;
	}
}

/* Make sure li selections wrap around markers */

//li.ProseMirror-selectednode {
//  outline: none;
//}
//
//li.ProseMirror-selectednode:after {
//  content: "";
//  position: absolute;
//  left: -32px;
//  right: -2px;
//  top: -2px;
//  bottom: -2px;
//  background-color: #f4f4f4;
//  pointer-events: none;
//  z-index: -1;
//}

ol {
	counter-reset: li;

	padding-left: 24px;
	cursor: text;
}

li {
	position: relative;
	line-height: 1.5;
}

/* rtl:begin:ignore */

li:after {
	position: absolute;
	top: 0;
	margin-left: -100px;
	width: 100px;
	height: 1.5em;
	content: "";
}

ul[dir=rtl] li::after, ol[dir=rtl] li::after {
	margin-right: -100px;
}

/* rtl:end:ignore */
